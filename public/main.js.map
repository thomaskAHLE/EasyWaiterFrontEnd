{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/kitchen-view/kitchen-view.component.css","webpack:///./src/app/kitchen-view/kitchen-view.component.html","webpack:///./src/app/kitchen-view/kitchen-view.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manager-view/manager-view.component.css","webpack:///./src/app/manager-view/manager-view.component.html","webpack:///./src/app/manager-view/manager-view.component.ts","webpack:///./src/app/models/food-model.ts","webpack:///./src/app/models/menu-model.ts","webpack:///./src/app/models/order-model.ts","webpack:///./src/app/models/table-model.ts","webpack:///./src/app/models/user-model.ts","webpack:///./src/app/services/menu.service.ts","webpack:///./src/app/services/restaurant.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/waiter-view/table-view-tabs/menu-tab/menu-tab.component.css","webpack:///./src/app/waiter-view/table-view-tabs/menu-tab/menu-tab.component.html","webpack:///./src/app/waiter-view/table-view-tabs/menu-tab/menu-tab.component.ts","webpack:///./src/app/waiter-view/table-view-tabs/ordered-tab/ordered-tab.component.css","webpack:///./src/app/waiter-view/table-view-tabs/ordered-tab/ordered-tab.component.html","webpack:///./src/app/waiter-view/table-view-tabs/ordered-tab/ordered-tab.component.ts","webpack:///./src/app/waiter-view/table-view-tabs/pending-tab/pending-tab.component.css","webpack:///./src/app/waiter-view/table-view-tabs/pending-tab/pending-tab.component.html","webpack:///./src/app/waiter-view/table-view-tabs/pending-tab/pending-tab.component.ts","webpack:///./src/app/waiter-view/table-view/table-view.component.css","webpack:///./src/app/waiter-view/table-view/table-view.component.html","webpack:///./src/app/waiter-view/table-view/table-view.component.ts","webpack:///./src/app/waiter-view/waiter-view.component.css","webpack:///./src/app/waiter-view/waiter-view.component.html","webpack:///./src/app/waiter-view/waiter-view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,uH;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACyB;AACZ;AACE;AACQ;AACjB;AACM;AACqB;AACG;AACA;AACgB;AACS;AACA;AACnB;AAC1B;AAEzD,IAAM,QAAQ,GAAW;IACvB,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAC;IACrD,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,gGAAkB,EAAC;IACvD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,cAAc,EAAC,SAAS,EAAE,yFAAoB,EAAC;IACtD,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAC,MAAM,EAAC;CACnD;AA6BD;IAAA;IAAyB,CAAC;IAAb,SAAS;QA3BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sFAAmB;gBACnB,yFAAoB;gBACpB,0FAAoB;gBACpB,0GAAgB;gBAChB,mHAAmB;gBACnB,mHAAmB;gBACnB,gGAAkB;gBAClB,sEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,6EAAiB;gBACjB,oEAAS,CAAC,OAAO,EAAE;gBACnB,4DAAY,CAAC,OAAO,CAClB,QAAQ,EACR,EAAE,aAAa,EAAE,IAAI,EAAC,CACvB;aACF;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpDtB,mB;;;;;;;;;;;ACAA,yYAAyY,SAAS,cAAc,gBAAgB,kVAAkV,SAAS,aAAa,gBAAgB,iSAAiS,QAAQ,aAAa,eAAe,uF;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5iC;AACA;AACH;AAO9D;IAEE,8BAAoB,kBAAqC;QAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;IAAI,CAAC;IAK9D,uCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAC9D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;IACpE,CAAC;IAED,4CAAa,GAAb;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;IACjD,CAAC;IAED,yCAAU,GAAV,UAAW,KAAgB;QAEzB,KAAK,CAAC,MAAM,GAAG,gEAAY,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;IAEhE,CAAC;IACD,2CAAY,GAAZ,UAAa,KAAgB;QAC3B,KAAK,CAAC,MAAM,GAAG,gEAAY,CAAC,WAAW,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;IAChE,CAAC;IAED,6CAAc,GAAd,UAAe,KAAgB;QAC7B,KAAK,CAAC,MAAM,GAAG,gEAAY,CAAC,QAAQ,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAC9D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;IACpE,CAAC;IACD,wCAAS,GAAT;QAEE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;IAC5D,CAAC;IAtCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAGwC,8EAAiB;OAF9C,oBAAoB,CAuChC;IAAD,2BAAC;CAAA;AAvCgC;;;;;;;;;;;;ACTjC,mB;;;;;;;;;;;ACAA,8L;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IACnB,iBAAiB;IACf,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,qD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;;ACNjC;AAAA;AAAA;AAAA,IAAY,aAAiD;AAA7D,WAAY,aAAa;IAAE,2DAAS;IAAE,iDAAI;IAAE,qDAAM;IAAE,uDAAO;AAAC,CAAC,EAAjD,aAAa,KAAb,aAAa,QAAoC;AAAA,CAAC;AAC9D;IAKI,mBAAY,IAAW,EAAE,KAAY,EAAE,QAAsB;QAEzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAwD;AACxD;IAAA;QACI,eAAU,GAAgB,EAAE,CAAC;QAC7B,YAAO,GAAgB,EAAE,CAAC;QAC1B,UAAK,GAAgB,EAAE,CAAC;QACxB,aAAQ,GAAgB,EAAE,CAAC;IA2B/B,CAAC;IAzBG,4BAAQ,GAAR,UAAS,IAAe;QACpB,QAAQ,IAAI,CAAC,QAAQ,EAAE;YAEnB,KAAK,yDAAa,CAAC,SAAS;gBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,MAAM;YAEV,KAAK,yDAAa,CAAC,MAAM;gBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM;YAEV,KAAK,yDAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,MAAM;YAEV,KAAK,yDAAa,CAAC,OAAO;gBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzB,MAAM;YAEV;gBACI,MAAM;SACb;IACL,CAAC;IAGL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCuD;AACxD,IAAY,YAAwD;AAApE,WAAY,YAAY;IAAG,iDAAK;IAAE,6DAAW;IAAE,uDAAQ;IAAE,yDAAS;AAAC,CAAC,EAAxD,YAAY,KAAZ,YAAY,QAA4C;AAAA,CAAC;AAErE;IAAgC,8BAAS;IAKrC,oBAAY,IAAc,EAAE,WAAmB;QAA/C,YACI,kBAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAG9C;QALM,YAAM,GAAiB,YAAY,CAAC,KAAK,CAAC;QAG7C,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,KAAI,CAAC,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC;;IACrC,CAAC;IACD,oCAAe,GAAf;QACI,OAAO,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAEtD,CAAC;IAXa,6BAAkB,GAAa,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,WAAW,CAAE,CAAC;IAYpG,iBAAC;CAAA,CAd+B,qDAAS,GAcxC;AAdsB;;;;;;;;;;;;;ACFvB;AAAA;AAAA;AAAyD;AAEzD;IAQI,oBAAY,WAAmB,EAAE,QAAgB,EAAE,UAAqB,EAAE,QAAiB,EAAE,MAAyB,EAAE,YAA+B;QAA1D,oCAAyB;QAAE,gDAA+B;QAHvJ,WAAM,GAAiB,EAAE,CAAC;QAC1B,kBAAa,GAAiB,EAAE,CAAC;QAG7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACtC,CAAC;IAED,iCAAY,GAAZ,UAAa,QAAmB;QAC5B,IAAM,KAAK,GAAe,IAAI,uDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IACD,sCAAiB,GAAjB,UAAkB,WAAsB;QACpC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC;IACxE,CAAC;IAED,mCAAc,GAAd;QAEI,KAAc,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAC;YAAtB,IAAI,CAAC;YACL,IAAG,CAAC,CAAC,MAAM,IAAI,yDAAY,CAAC,QAAQ;gBACpC,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAA,IAAY,SAAmC;AAA/C,WAAY,SAAS;IAAC,6CAAM;IAAE,+CAAO;IAAE,+CAAO;AAAA,CAAC,EAAnC,SAAS,KAAT,SAAS,QAA0B;AAAA,CAAC;AAEhD;IAAA;IAOA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT0C;AACI;AACe;AAC9D,IAAM,QAAQ,GAAgB;IAC5B;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,gEAAa,CAAC,SAAS;KAClC;IACD;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,gEAAa,CAAC,MAAM;KAC/B;IACD;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,gEAAa,CAAC,IAAI;KAC7B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,gEAAa,CAAC,OAAO;KAChC;CAEA,CAAC;AAKJ;IAGE;QADA,SAAI,GAAa,IAAI,4DAAS,EAAE,CAAC;QAE/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EACvC;YACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IACD,6BAAO,GAAP;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAXU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,WAAW,CAYvB;IAAD,kBAAC;CAAA;AAZuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BmB;AACQ;AAEM;AACO;AAMhE;IAIE,2BAAY,YAAyB;QACnC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;IAED,4CAAgB,GAAhB,UAAiB,MAAM;QACrB,OAAO,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,KAAK,MAAM,EAAvB,CAAuB,CAAC,CAAC;IACxD,CAAC;IACD,yCAAa,GAAb;QACE,IAAI,UAAU,GAAe,EAAE,CAAC;QAChC,KAAiB,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAC5B;YADI,IAAI,KAAK;YAEX,IAAG,KAAK,CAAC,QAAQ,EACjB;gBACC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAG,QAAC,CAAC,MAAM,KAAK,gEAAY,CAAC,KAAK,EAA/B,CAA+B,CAAC,CAAC,CAAC;aACzF;SACF;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,YAAY,GAAe,EAAE,CAAC;QAClC,KAAiB,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAC5B;YADI,IAAI,KAAK;YAEX,IAAG,KAAK,CAAC,QAAQ,EACjB;gBACC,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAG,QAAC,CAAC,MAAM,KAAK,gEAAY,CAAC,WAAW,EAArC,CAAqC,CAAC,CAAC,CAAC;aACnG;SACF;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IACD,6CAAiB,GAAjB;QACE,IAAI,cAAc,GAAe,EAAE,CAAC;QACpC,KAAiB,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAC5B;YADI,IAAI,KAAK;YAEX,IAAG,KAAK,CAAC,QAAQ,EACjB;gBACC,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAG,QAAC,CAAC,MAAM,KAAK,gEAAY,CAAC,QAAQ,EAAlC,CAAkC,CAAC,CAAC,CAAC;aACpG;SACF;QACD,OAAO,cAAc,CAAC;IACxB,CAAC;IA7CU,iBAAiB;QAJ7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,yDAAW;OAJ1B,iBAAiB,CAiD7B;IAAD,wBAAC;CAAA;AAjD6B;AAoD9B,IAAM,SAAS,GAAiB;IAC9B,IAAI,8DAAU,CACZ,CAAC,EACD,CAAC,EACD,wDAAU,CAAC,CAAC,CAAC,EACb,IAAI,CACL;IACD,IAAI,8DAAU,CACZ,CAAC,EACD,CAAC,EACD,wDAAU,CAAC,CAAC,CAAC,EACb,IAAI,CACL;IACD,IAAI,8DAAU,CACZ,CAAC,EACD,CAAC,EACD,wDAAU,CAAC,CAAC,CAAC,EACb,IAAI,CACL;IACD,IAAI,8DAAU,CACZ,CAAC,EACD,CAAC,EACD,wDAAU,CAAC,CAAC,CAAC,EACb,IAAI,CACL;CAEF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFyC;AACiB;AAErD,IAAM,UAAU,GAAgB,CAAC;QACtC,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,UAAU;QACxB,SAAS,EAAE,uBAAuB;QAClC,QAAQ,EAAE,4DAAS,CAAC,MAAM;KAC3B;IACD;QACE,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,WAAW;QACzB,SAAS,EAAE,uBAAuB;QAClC,QAAQ,EAAE,4DAAS,CAAC,MAAM;KAC3B,CAAC,CAAC;AAMH;IAME;QALA,SAAI,GAAc,UAAU,CAAC,CAAC,CAAC,CAAC;IAKhB,CAAC;IAJjB,uCAAuC;IACvC,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IALU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,WAAW,CAQvB;IAAD,kBAAC;CAAA;AARuB;;;;;;;;;;;;ACpBxB,mB;;;;;;;;;;;ACAA,qPAAqP,QAAQ,GAAG,SAAS,8ZAA8Z,QAAQ,GAAG,SAAS,2aAA2a,QAAQ,GAAG,SAAS,saAAsa,QAAQ,GAAG,SAAS,0M;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3/C;AACG;AAEJ;AAQxD;IAKE,0BAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAC7C,CAAC;IAED,2CAAgB,GAAhB,UAAiB,IAAc;QAC7B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAC1C,CAAC;IAZD;QADC,2DAAK,EAAE;kCACD,qEAAU;mDAAC;IAFP,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAMkC,yEAAW;OALlC,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA;AAhB4B;;;;;;;;;;;;ACX7B,mB;;;;;;;;;;;ACAA,8RAA8R,QAAQ,6DAA6D,qBAAqB,qP;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/T;AACY;AACb;AAMxD;IAIE;QADA,gBAAW,GAAG,gEAAY,CAAC;IACX,CAAC;IAEjB,iDAAmB,GAAnB,UAAoB,KAAgB;QAGlC,KAAK,CAAC,MAAM,GAAE,gEAAY,CAAC,SAAS,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAZD;QADC,2DAAK,EAAE;kCACD,qEAAU;sDAAC;IAFP,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,mBAAmB,CAiB/B;IAAD,0BAAC;CAAA;AAjB+B;;;;;;;;;;;;ACRhC,mB;;;;;;;;;;;ACAA,uQAAuQ,QAAQ,4RAA4R,iO;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlf;AACD;AACa;AAMrE;IAME;QAFA,gBAAW,GAAG,gEAAY,CAAC;IAEX,CAAC;IAEjB,mDAAqB,GAArB,UAAsB,KAAgB;QAEpC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAEtC,CAAC;IAED,kCAAI,GAAJ;QAEE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAlBD;QADC,2DAAK,EAAE;kCACD,qEAAU;sDAAC;IAHP,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,mBAAmB,CAuB/B;IAAD,0BAAC;CAAA;AAvB+B;;;;;;;;;;;;ACRhC,mB;;;;;;;;;;;ACAA,gJAAgJ,YAAY,yPAAyP,gCAAgC,gIAAgI,uCAAuC,+HAA+H,mCAAmC,gUAAgU,YAAY,W;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxhC;AAEO;AACe;AACxE,IAAY,QAAuC;AAAnD,WAAY,QAAQ;IAAG,uCAAI;IAAE,qDAAW;IAAE,6CAAO;AAAC,CAAC,EAAvC,QAAQ,KAAR,QAAQ,QAA+B;AAAA,CAAC;AAOpD;IAME,4BAAoB,KAAqB,EAAU,MAAc,EAAU,kBAAqC;QAAhH,iBAQC;QARmB,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;QADhH,YAAO,GAAG,QAAQ,CAAC;QAEjB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,WAAW,IAAI,KAAI,CAAC,UAAU,EAAhC,CAAgC,CAAC,CAAC;QACxF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACzB,CAAC;IACD,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACtC,mCAAmC;IAErC,CAAC;IACD,qCAAQ,GAAR;IACA,CAAC;IArBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAO2B,8DAAc,EAAkB,sDAAM,EAA8B,qFAAiB;OANrG,kBAAkB,CAuB9B;IAAD,yBAAC;CAAA;AAvB8B;;;;;;;;;;;;ACX/B,mB;;;;;;;;;;;ACAA,yQAAyQ,eAAe,YAAY,eAAe,8FAA8F,ghBAAghB,eAAe,4HAA4H,YAAY,iFAAiF,gBAAgB,iB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvmC;AAEG;AACc;AAMnE;IAME,6BAAqB,YAAyB,EAAU,kBAAqC;QAAxE,iBAAY,GAAZ,YAAY,CAAa;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;IAC5F,CAAC;IAEF,sCAAQ,GAAR;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,QAAQ,EAAX,CAAW,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAhBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAOmC,kEAAW,EAA8B,8EAAiB;OANlF,mBAAmB,CAkB/B;IAAD,0BAAC;CAAA;AAlB+B;;;;;;;;;;;;;ACThC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'EasyWaiter';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes} from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { AppComponent } from './app.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { WaiterViewComponent } from './waiter-view/waiter-view.component';\nimport { KitchenViewComponent } from './kitchen-view/kitchen-view.component';\nimport { ManagerViewComponent } from './manager-view/manager-view.component';\nimport { MenuTabComponent } from './waiter-view/table-view-tabs/menu-tab/menu-tab.component';\nimport { PendingTabComponent } from './waiter-view/table-view-tabs/pending-tab/pending-tab.component';\nimport { OrderedTabComponent } from './waiter-view/table-view-tabs/ordered-tab/ordered-tab.component';\nimport { TableViewComponent } from './waiter-view/table-view/table-view.component';\nimport { LoginComponent } from './login/login.component';\n\nconst appRoute: Routes = [\n  {path: 'waiter-view', component: WaiterViewComponent},\n  {path: 'table-view/:id', component: TableViewComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'kitchen-view',component: KitchenViewComponent},\n  {path: '', redirectTo: '/login', pathMatch:'full'}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WaiterViewComponent,\n    KitchenViewComponent,\n    ManagerViewComponent,\n    MenuTabComponent,\n    PendingTabComponent,\n    OrderedTabComponent,\n    TableViewComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DragAndDropModule,\n    NgbModule.forRoot(),\n    RouterModule.forRoot(\n      appRoute,\n      { enableTracing: true}\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<a routerLink = \\\"/waiter-view/\\\">Login Waiter</a>\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-4 border\\\" mwlDroppable (drop) = 'moveToToDo($event.dropData)' >\\n        To Do\\n        <ul class=\\\"list-group\\\" *ngFor = 'let td of toDoOrders'>\\n            <div mwlDraggable [dropData] = td>\\n            <li class=\\\"list-group-item\\\">{{td.name}}  for Table:{{td.tableNumber}}\\n            </li>\\n        </div>\\n          </ul>\\n      </div>\\n      <div class=\\\"col-4 border\\\" mwlDroppable (drop)='moveToInProg($event.dropData)'>\\n        In Progress\\n        <ul class=\\\"list-group\\\" *ngFor = 'let ip of inProgOrders'>\\n            <div mwlDraggable [dropData] = ip>\\n            <li class=\\\"list-group-item\\\">{{ip.name}} for Table:{{ip.tableNumber}}\\n            </li>\\n        </div>\\n          </ul>\\n      </div>\\n      <div class=\\\"col-4 border\\\" mwlDroppable (drop)='moveToFinished($event.dropData)'>\\n        Finished\\n       <ul class=\\\"list-group\\\" *ngFor = 'let f of finishedOrders'>\\n            <li class=\\\"list-group-item\\\">{{f.name}} for Table:{{f.tableNumber}}\\n            </li>\\n            \\n          </ul>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, DoCheck, Input} from '@angular/core';\nimport {RestaurantService} from '../services/restaurant.service';\nimport {OrderModel,ORDER_STATUS} from '../models/order-model';\n\n@Component({\n  selector: 'app-kitchen-view',\n  templateUrl: './kitchen-view.component.html',\n  styleUrls: ['./kitchen-view.component.css']\n})\nexport class KitchenViewComponent implements OnInit, DoCheck {\n\n  constructor(private _restaurantService :RestaurantService) { }\n \n  toDoOrders:OrderModel[];\n  inProgOrders:OrderModel[];\n  finishedOrders:OrderModel[];\n  ngOnInit() {\n    this.toDoOrders = this._restaurantService.getToDoOrders();\n    this.inProgOrders = this._restaurantService.getInProgOrders();\n    this.finishedOrders = this._restaurantService.getFinishedOrders();\n  }\n\n  getToDoOrders():OrderModel[]{\n    return this._restaurantService.getToDoOrders();\n  }\n\n  moveToToDo(order:OrderModel)\n  {\n    order.status = ORDER_STATUS.TO_DO;\n    this.toDoOrders=this._restaurantService.getToDoOrders();\n    this.inProgOrders = this._restaurantService.getInProgOrders();\n\n  }\n  moveToInProg(order:OrderModel){\n    order.status = ORDER_STATUS.IN_PROGRESS;\n    this.toDoOrders = this._restaurantService.getToDoOrders();\n    this.inProgOrders = this._restaurantService.getInProgOrders();\n  }\n\n  moveToFinished(order:OrderModel){\n    order.status = ORDER_STATUS.FINISHED;\n    this.inProgOrders = this._restaurantService.getInProgOrders();\n    this.finishedOrders = this._restaurantService.getFinishedOrders();\n  }\n  ngDoCheck()\n  {\n    this.toDoOrders = this._restaurantService.getToDoOrders();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"page-header\\\">\\n    <h1>Easy Waiter</h1>\\n  </div>\\n\\n<a routerLink = \\\"/waiter-view/\\\">Login Waiter</a>\\n<a routerLink = \\\"/kitchen-view/\\\">Login Kitchen</a>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n//Todo make purty\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  manager-view works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manager-view',\n  templateUrl: './manager-view.component.html',\n  styleUrls: ['./manager-view.component.css']\n})\nexport class ManagerViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\nexport enum FOOD_CATEGORY{ APPETIZER, SIDE, ENTREE, DESSERT };\nexport class FoodModel\n{\n    public name:string;\n    public price: number;\n    public category:FOOD_CATEGORY;\n    constructor(name:string, price:number, category:FOOD_CATEGORY)\n    {\n        this.name = name;\n        this.price = price;\n        this.category = category;\n    }\n}","\nimport { FoodModel, FOOD_CATEGORY } from './food-model';\nexport class MenuModel {\n    appetizers: FoodModel[] = [];\n    entrees: FoodModel[] = [];\n    sides: FoodModel[] = [];\n    desserts: FoodModel[] = [];\n\n    add_item(food: FoodModel) {\n        switch (food.category) {\n\n            case FOOD_CATEGORY.APPETIZER:\n                this.appetizers.push(food);\n                break;\n\n            case FOOD_CATEGORY.ENTREE:\n                this.entrees.push(food);\n                break;\n\n            case FOOD_CATEGORY.SIDE:\n                this.sides.push(food);\n                break;\n\n            case FOOD_CATEGORY.DESSERT:\n                this.desserts.push(food);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n\n}","import { FoodModel, FOOD_CATEGORY } from \"./food-model\";\nexport enum ORDER_STATUS { TO_DO, IN_PROGRESS, FINISHED, DELIVERED };\n\nexport class OrderModel extends FoodModel {\n\n    public static OrderStatusStrings: string[] = ['To do', 'In Progress', 'Finished', 'Delivered' ];\n    public tableNumber: number;\n    public status: ORDER_STATUS = ORDER_STATUS.TO_DO;\n    constructor(food:FoodModel, tableNumber: number) {\n        super(food.name, food.price, food.category);\n        this.tableNumber = tableNumber;\n        this.status = ORDER_STATUS.TO_DO;\n    }\n    getStatusString() :string {\n        return OrderModel.OrderStatusStrings[this.status];\n\n    }\n}","import { UserModel } from './user-model';\nimport { OrderModel, ORDER_STATUS } from './order-model';\nimport { FoodModel } from './food-model';\nexport class TableModel {\n    tableNumber: number;\n    numSeats: number;\n    assignedTo: UserModel;\n    isActive: boolean;\n    Orders: OrderModel[] = [];\n    PendingOrders: OrderModel[] = [];\n\n    constructor(tableNumber: number, numSeats: number, assignedTo: UserModel, isActive: boolean, orders: OrderModel[] = [], pendingOrder: OrderModel[] = []) {\n        this.tableNumber = tableNumber;\n        this.numSeats = numSeats;\n        this.assignedTo = assignedTo;\n        this.isActive = isActive;\n        this.Orders = orders;\n        this.PendingOrders = pendingOrder;\n    }\n\n    addToPending(foodItem: FoodModel): void {\n        const order: OrderModel = new OrderModel(foodItem, this.tableNumber);\n        this.PendingOrders.push(order);\n    }\n    removeFromPending(pendingItem:OrderModel):void{\n        this.PendingOrders.splice(this.PendingOrders.indexOf(pendingItem),1)\n    }\n\n    readyForPickup():boolean {\n\n        for(let o  of this.Orders){\n            if(o.status == ORDER_STATUS.FINISHED)\n            return true;\n        }\n        return false;\n    }\n\n}","export enum USER_TYPE{WAITER, MANAGER, KITCHEN};\n\nexport class UserModel\n{\n    userName: string;\n    userPassword: string;\n    userEmail:string;\n    userType: USER_TYPE; \n    \n}","import { Injectable } from '@angular/core';\nimport {MenuModel} from '../models/menu-model';\nimport {FoodModel, FOOD_CATEGORY} from '../models/food-model';\nconst foodList: FoodModel[] = [\n  {\n    name: 'Wings',\n    price: 12.99,\n    category: FOOD_CATEGORY.APPETIZER\n  },\n  {\n    name: 'Steak',\n    price: 22.99,\n    category: FOOD_CATEGORY.ENTREE\n  },\n  {\n    name: 'Fries',\n    price: 2.99,\n    category: FOOD_CATEGORY.SIDE\n  },\n  {\n    name: 'Ice Cream',\n    price: 7.99,\n    category: FOOD_CATEGORY.DESSERT\n  }\n  \n  ];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  menu:MenuModel = new MenuModel();\n  constructor() { \n    for(let i = 0; i < foodList.length; i++)\n    {\n      this.menu.add_item(foodList[i]);\n    }\n  }\n  getMenu (): MenuModel{\n    return this.menu;\n  }\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { TableModel } from '../models/table-model';\nimport { UserModel, USER_TYPE } from '../models/user-model';\nimport { UserService, waiterData } from './user.service';\nimport { OrderModel,ORDER_STATUS } from '../models/order-model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestaurantService {\n\n  tables: TableModel[];\n  waiters: UserModel[];\n  constructor(_userServers: UserService) {\n    this.tables = tableData;\n    console.log('Restaurant service constructor');\n  }\n\n  getWaitersTables(waiter): TableModel[] {\n    return tableData.filter(t => t.assignedTo === waiter);\n  }\n  getToDoOrders():OrderModel[]{\n    let todoOrders: OrderModel[]=[];\n    for(let table of this.tables)\n    {\n      if(table.isActive)\n      {\n       todoOrders = todoOrders.concat(table.Orders.filter(t=> t.status === ORDER_STATUS.TO_DO));\n      }\n    }\n    return todoOrders;\n  }\n\n  getInProgOrders():OrderModel[]{\n    let inProgOrders: OrderModel[]=[];\n    for(let table of this.tables)\n    {\n      if(table.isActive)\n      {\n       inProgOrders = inProgOrders.concat(table.Orders.filter(t=> t.status === ORDER_STATUS.IN_PROGRESS));\n      }\n    }\n    return inProgOrders;\n  }\n  getFinishedOrders():OrderModel[]{\n    let finishedOrders: OrderModel[]=[];\n    for(let table of this.tables)\n    {\n      if(table.isActive)\n      {\n       finishedOrders = finishedOrders.concat(table.Orders.filter(t=> t.status === ORDER_STATUS.FINISHED));\n      }\n    }\n    return finishedOrders;\n  }\n  \n\n\n}\n\n\nconst tableData: TableModel[] = [\n  new TableModel(\n    1,\n    4,\n    waiterData[0],\n    true\n  ),\n  new TableModel(\n    2,\n    5,\n    waiterData[0],\n    true\n  ),\n  new TableModel(\n    3,\n    6,\n    waiterData[0],\n    true\n  ),\n  new TableModel(\n    4,\n    8,\n    waiterData[0],\n    true\n  )\n\n];","import { Injectable } from '@angular/core';\nimport { UserModel, USER_TYPE } from '../models/user-model';\n\nexport const waiterData: UserModel[] = [{\n  userName: 'thill1',\n  userPassword: 'password',\n  userEmail: 'thomas@easywaiter.com',\n  userType: USER_TYPE.WAITER\n},\n{\n  userName: 'kahle2',\n  userPassword: 'password2',\n  userEmail: 'kahle2@easywaiter.com',\n  userType: USER_TYPE.WAITER\n}];\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  user: UserModel = waiterData[0];\n  //might call database on initialization\n  getCurrentUser(): UserModel {\n    return this.user;\n  }\n  constructor() { }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-bordered \\\">\\n  <thead>\\n    <th colspan=\\\"2\\\" class = \\\"text-center\\\">Appetizers</th>\\n    \\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let a of menu.appetizers\\\">\\n      <td width=\\\"50%\\\"> \\n        {{a.name}} {{a.price}}\\n      </td>\\n      <td class=\\\"text-center\\\" width=\\\"50%\\\"> \\n        <button class=\\\"btn btn-success\\\" (click) = 'addFoodToPending(a)'>Add</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n  \\n</table>\\n\\n<table class=\\\"table table-bordered \\\">\\n  <thead>\\n    <th colspan=\\\"2\\\" class = \\\"text-center\\\">Sides</th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let s of menu.sides\\\">\\n      <td width=\\\"50%\\\">\\n        {{s.name}} {{s.price}}\\n      </td>\\n      <td class=\\\"text-center\\\" width=\\\"50%\\\">\\n          <button class=\\\"btn btn-success\\\" (click) = 'addFoodToPending(s)'>Add</button>\\n      </td>\\n      \\n    </tr>\\n  </tbody>\\n  \\n</table>\\n\\n<table class=\\\"table table-bordered \\\">\\n  <thead>\\n    <th colspan=\\\"2\\\" class = \\\"text-center\\\">Entrees</th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let e of menu.entrees\\\">\\n      <td width=\\\"50%\\\">\\n        {{e.name}} {{e.price}}\\n      </td>\\n      <td class=\\\"text-center\\\" width=\\\"50%\\\">\\n          <button class=\\\"btn btn-success\\\" (click) = 'addFoodToPending(e)'>Add</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n  \\n</table>\\n\\n<table class=\\\"table table-bordered \\\">\\n  <thead>\\n    <th colspan=\\\"2\\\" class = \\\"text-center\\\">Desserts</th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let d of menu.desserts\\\">\\n      <td width=\\\"50%\\\"> \\n        {{d.name}} {{d.price}}\\n      </td>\\n      <td class=\\\"text-center\\\" width=\\\"50%\\\">\\n          <button class=\\\"btn btn-success\\\" (click) = 'addFoodToPending(d)'>Add</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n  \\n</table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MenuService } from 'src/app/services/menu.service';\nimport {MenuModel} from '../../../models/menu-model'\nimport { TableModel } from 'src/app/models/table-model';\nimport {FoodModel} from '../../../models/food-model';\n\n@Component({\n  selector: 'app-menu-tab',\n  templateUrl: './menu-tab.component.html',\n  styleUrls: ['./menu-tab.component.css']\n})\nexport class MenuTabComponent implements OnInit {\n  @Input()\n  table: TableModel;\n  \n  menu: MenuModel;\n  constructor(private _menuservice: MenuService) { \n  }\n\n  addFoodToPending(food:FoodModel){\n    this.table.addToPending(food);\n  }\n\n  ngOnInit( ) {\n    this.menu = this._menuservice.getMenu();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class='table-responsive'>\\n<table class=\\\"table table-bordered \\\">\\n    <thead>\\n      <th colspan=\\\"2\\\" class = \\\"text-center\\\">Ordered Items</th>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let o of table.Orders\\\">\\n        <td width=\\\"50%\\\">\\n            {{o.name}}  \\n        </td>\\n        <td width=\\\"50%\\\">\\n            {{o.getStatusString()}}\\n          <div *ngIf='o.status == orderStatus.FINISHED'>\\n            <button class = \\\"btn btn-success\\\" (click) = 'markFoodAsDelivered(o)' >Delivered</button>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport {OrderModel, ORDER_STATUS} from '../../../models/order-model';\nimport { TableModel } from 'src/app/models/table-model';\n@Component({\n  selector: 'app-ordered-tab',\n  templateUrl: './ordered-tab.component.html',\n  styleUrls: ['./ordered-tab.component.css']\n})\nexport class OrderedTabComponent implements OnInit {\n  @Input()\n  table: TableModel;\n  orderStatus = ORDER_STATUS;\n  constructor() { }\n  \n  markFoodAsDelivered(order:OrderModel)\n  {\n\n    order.status= ORDER_STATUS.DELIVERED;\n    console.log(order);\n  }\n  \n  ngOnInit() {\n  }\n\n  \n}\n","module.exports = \"\"","module.exports = \"\\n<table class=\\\"table table-bordered \\\">\\n    <thead>\\n      <th colspan=\\\"2\\\" class = \\\"text-center\\\">Pending Items</th>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let p of table.PendingOrders\\\">\\n        <td width=\\\"50%\\\">\\n            {{p.name}} \\n        </td>\\n        <td class=\\\"text-center\\\" width=\\\"50%\\\">\\n            <button class=\\\"btn btn-danger\\\" (click) = 'removeFoodFromPending(p)'>Remove</button>\\n        </td>\\n        \\n      </tr>\\n    </tbody>\\n    \\n  <tfoot>\\n  <div *ngIf='table?.PendingOrders?.length >  0;else noPending'>\\n  <button class = \\\"btn btn-success\\\" (click) = 'send()'>Send</button>\\n</div>\\n<ng-template #noPending>\\n    <button class = \\\"btn btn-secondary\\\" disabled>Send</button>\\n</ng-template>\\n</tfoot>\\n</table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TableModel } from 'src/app/models/table-model';\nimport {ORDER_STATUS, OrderModel} from '../../../models/order-model';\n@Component({\n  selector: 'app-pending-tab',\n  templateUrl: './pending-tab.component.html',\n  styleUrls: ['./pending-tab.component.css']\n})\nexport class PendingTabComponent implements OnInit {\n\n  @Input()\n  table: TableModel;\n  orderStatus = ORDER_STATUS;\n  \n  constructor() { }\n\n  removeFoodFromPending(order:OrderModel):void\n  {\n    this.table.removeFromPending(order);\n  \n  }\n\n  send():void //temperary function \n  {\n    this.table.Orders = this.table.Orders.concat(this.table.PendingOrders); \n    this.table.PendingOrders = [];\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a routerLink = \\\"/kitchen-view/\\\">Login Kitchen</a>\\n<div class = 'row'>\\n<div class='col-sm-12 text-center'>\\n  <h1>Table {{selectedId}}\\n  <button class = 'btn btn-danger float-sm-right' (click) = 'onBack()' >back</button>\\n</h1>\\n  <hr>\\n</div>\\n</div>\\n<ul class=\\\"nav nav-pills\\\">\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" (click)='openTab = OpenTab.MENU' [ngClass]=\\\"{'active':openTab== OpenTab.MENU}\\\">Menu</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" (click)='openTab = OpenTab.IN_PROGRESS' [ngClass]=\\\"{'active':openTab== OpenTab.IN_PROGRESS}\\\">Pending</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" (click)='openTab = OpenTab.ORDERED' [ngClass]=\\\"{'active':openTab== OpenTab.ORDERED}\\\">Ordered</a>\\n  </li>\\n</ul>\\n\\n<app-menu-tab *ngIf=\\\"openTab === OpenTab.MENU\\\" [table]=\\\"table\\\"></app-menu-tab>\\n<app-pending-tab *ngIf=\\\"openTab === OpenTab.IN_PROGRESS\\\" [table]=\\\"table\\\"></app-pending-tab>\\n<app-ordered-tab *ngIf=\\\"openTab === OpenTab.ORDERED\\\" [table]=\\\"table\\\"></app-ordered-tab>\\n<!-- <pre>{{table|json}}</pre> -->\"","import { Component, OnInit } from '@angular/core';\nimport { TableModel } from '../../models/table-model'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestaurantService } from 'src/app/services/restaurant.service';\nexport enum OPEN_TAB { MENU, IN_PROGRESS, ORDERED };\n\n@Component({\n  selector: 'app-table-view',\n  templateUrl: './table-view.component.html',\n  styleUrls: ['./table-view.component.css']\n})\nexport class TableViewComponent implements OnInit {\n\n  table: TableModel;\n  selectedId: number;\n  openTab: OPEN_TAB;\n  OpenTab = OPEN_TAB;\n  constructor(private route: ActivatedRoute, private router: Router, private _restaurantService: RestaurantService) {\n    this.openTab = OPEN_TAB.MENU;\n    this.selectedId = this.route.snapshot.params['id'];\n    console.log(this.selectedId)\n    this.table = this._restaurantService.tables.find(t => t.tableNumber == this.selectedId);\n    console.log('table')\n    console.log(this._restaurantService.tables)\n    console.log(this.table)\n  }\n  onBack() {\n    this.router.navigate(['waiter-view']);\n    //todo popup if pending isn't empty\n\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class='table-responsive'>\\n<table class=\\\"table\\\">\\n  <thead>\\n    <th colspan=\\\"2\\\" class = \\\"text-center\\\">Active</th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let t of activeTables\\\">\\n      <td>\\n        <a routerLink = \\\"/table-view/{{t.tableNumber}}\\\">Table #{{t.tableNumber}}</a>\\n      </td>\\n      <td class=\\\"text-center\\\">\\n        <div *ngIf = 't.readyForPickup();else notready'>\\n        <button class=\\\"btn btn-success\\\">Ready For Pickup</button>\\n      </div>\\n        <ng-template #notready>\\n            <button class=\\\"btn btn-secondary\\\" disabled >Ready For Pickup</button>\\n        </ng-template>\\n      </td>\\n    </tr>\\n  </tbody>\\n  \\n</table>\\n</div>\\n<div class = 'table-responsive'>\\n<table class=\\\"table\\\">\\n  <thead>\\n    <th colspan=\\\"2\\\" class = \\\"text-center\\\">Inactive</th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let t of inactiveTables\\\">\\n      <td>\\n        Table #{{t.tableNumber}}\\n      </td>\\n      <td class=\\\"text-center\\\"> \\n        <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!t.is_active\\\">{{t.numSeats}}</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n  \\n</table>\\n</div>\\n<!-- <pre>{{my_tables|json}}</pre> -->\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TableModel} from '../models/table-model';\nimport {UserService} from '../services/user.service';\nimport { RestaurantService } from '../services/restaurant.service';\n@Component({\n  selector: 'app-waiter-view',\n  templateUrl: './waiter-view.component.html',\n  styleUrls: ['./waiter-view.component.css']\n})\nexport class WaiterViewComponent implements OnInit {\n\n  allTables: TableModel[];//subscribe to tables to track updates\n  activeTables: TableModel[];\n  inactiveTables:TableModel[];\n \n  constructor( private _userService: UserService, private _restaurantService: RestaurantService) {\n   }\n\n  ngOnInit() {\n    const waiter = this._userService.getCurrentUser();\n    this.allTables = this._restaurantService.getWaitersTables(waiter);\n    this.activeTables = this.allTables.filter(t => t.isActive);\n    this.inactiveTables = this.allTables.filter(t => !t.isActive);\n    console.log(waiter);\n    console.log(this.allTables);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}